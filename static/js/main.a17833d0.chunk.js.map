{"version":3,"sources":["redux/usersSelectors.js","assets/images/icon.png","assets/images/Loading.svg","api/api.js","logo.svg","redux/profileReducer.js","components/Header/Header.js","components/common/Loading/Loading.js","redux/authReducer.js","components/Header/HeaderContainer.js","components/Nav/Nav.js","components/Chats/Dialog.js","components/Chats/Message.js","components/Chats/Dialogs.js","redux/chatsReducer.js","components/Chats/DialogsContainer.js","components/Profile/Comment.js","components/Profile/ProfileStatusWithHooks.js","components/Profile/ProfileTop.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Login/LogIn.js","components/Users/User.js","components/Users/Users.js","redux/usersReducer.js","components/Users/UsersContainer.js","redux/appReducer.js","App.js","reportWebVitals.js","redux/reduxStore.js","index.js","assets/images/avatar.png","hoc/withAuthRedirect.js","validators/validators.js","components/common/FormsControls/FormsControls.js"],"names":["getUsersFromState","state","usersPage","users","getLeftLimit","leftLimit","getRightLimit","rightLimit","getPageSizeFromState","pageSize","getTotalCountFromState","totalCount","getCurrentPageState","currentPage","getIsLoadingFromStateUsers","isLoading","getIsAddingFromState","isAdding","getProfileFromState","profile","getIsLoadingFromStateProfile","getProfileDataFromStateProfile","profileData","getStatusFromState","status","getAuthorizedUserIdFromState","auth","id","getLoginFromState","login","getDialogsDataFromState","chats","dialogsData","getNameFromState","chatName","getMessagesDataFromState","messagesData","createSelector","filter","el","photos","small","module","exports","baseUrl","API","getUsers","axios","withCredentials","delUser","headers","addUser","getProfileInfo","getStatus","updateStatus","getAuth","logIn","email","password","rememberMe","logOut","savePhoto","file","formData","FormData","append","updateProfile","newData","ADD_LIKE","ADD_POST","initialState","commentsData","avatar","userPhoto","text","name","likes","addPost","type","postText","addLike","postId","parseInt","toggleLoading","setProfile","setStatus","getProfileInfoFull","dispatch","a","response","data","getUserStatusFull","updateStatusFull","resultCode","savePhotoFull","updateProfileFull","commentsReducer","action","newId","length","newPost","stateCopy","push","currentPost","find","x","Header","param","className","src","icon","onClick","logOutFull","to","Loading","loading","isAuth","setUserData","userData","getAuthFull","authReducer","HeaderAPI","this","props","PureComponent","UsersContainer","connect","Nav","Dialog","path","Message","ReduxSendMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Dialogs","messages","map","key","dialogs","values","addMessage","message","chatsReducer","newMessage","messageText","console","log","compose","withAuthRedirect","Comment","postElement","React","createRef","ref","current","ProfileStatusWithHooks","memo","useState","editMode","setEditMode","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","onDoubleClick","isOwner","ProfileTop","userId","large","target","files","aboutMe","fullName","ReduxAddPostForm","Profile","comments","ProfileAPI","match","params","authorizedUserId","refreshProfile","prevProps","prevState","snapshot","withRouter","minLength4","minLengthCreator","ReduxLogInForm","error","Input","validate","required","logInFull","stopSubmit","_error","User","userElement","alt","friend","disabled","delUserFull","addUserFull","Users","pagesCount","Math","ceil","pages","i","followed","changePages","p","onPageChanged","changePage","toggleAdding","usersReducer","u","page","count","UsersAPI","getUsersFull","items","initialized","appReducer","ProfileSettings","lazy","App","initializeApp","HeaderContainer","render","DialogsContainer","ProfileContainer","Suspense","fallback","Component","app","then","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","mapStateToPropsRedirect","RedirectComponent","minLength","input","meta","hasError","touched"],"mappings":"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","file":"static/js/main.a17833d0.chunk.js","sourcesContent":["import {createSelector} from \"reselect\";\r\n\r\n//Users\r\nexport const getUsersFromState = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getLeftLimit = (state) => {\r\n    return state.usersPage.leftLimit;\r\n}\r\n\r\nexport const getRightLimit = (state) => {\r\n    return state.usersPage.rightLimit;\r\n}\r\n\r\nexport const getPageSizeFromState = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalCountFromState = (state) => {\r\n    return state.usersPage.totalCount;\r\n}\r\n\r\nexport const getCurrentPageState = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsLoadingFromStateUsers = (state) => {\r\n    return state.usersPage.isLoading;\r\n}\r\n\r\nexport const getIsAddingFromState = (state) => {\r\n    return state.usersPage.isAdding;\r\n}\r\n//Profile\r\nexport const getProfileFromState = (state) => {\r\n    return state.profile;\r\n}\r\n\r\nexport const getIsLoadingFromStateProfile = (state) => {\r\n    return state.profile.isLoading;\r\n}\r\n\r\nexport const getProfileDataFromStateProfile = (state) => {\r\n    return state.profile.profileData;\r\n}\r\n\r\nexport const getStatusFromState = (state) => {\r\n    return state.profile.status;\r\n}\r\n//Auth\r\nexport const getAuthorizedUserIdFromState = (state) => {\r\n    return state.auth.id;\r\n}\r\n\r\nexport const getLoginFromState = (state) => {\r\n    return state.auth.login;\r\n}\r\n//Chats\r\nexport const getDialogsDataFromState = (state) => {\r\n    return state.chats.dialogsData;\r\n}\r\n\r\nexport const getNameFromState = (state) => {\r\n    return state.chats.chatName;\r\n}\r\n\r\nexport const getMessagesDataFromState = (state) => {\r\n    return state.chats.messagesData;\r\n}\r\n//More difficult\r\nexport const getUsersWithPhoto = createSelector(getUsersFromState,(users) => {\r\n    return users.filter(el => (el.photos.small));\r\n});","module.exports = __webpack_public_path__ + \"static/media/icon.bb7d3f0c.png\";","module.exports = __webpack_public_path__ + \"static/media/Loading.4850ba13.svg\";","import * as axios from \"axios\";\r\n\r\n\r\nconst baseUrl = \"https://social-network.samuraijs.com/api/1.0/\"\r\nconst API = \"865b0a4c-c600-44ac-bef7-7ad0b749f88a\"\r\n\r\nexport const getUsers = (currentPage,pageSize) => {\r\n    return axios.get(baseUrl + `users?page=${currentPage}&count=${pageSize}`,\r\n        {\r\n            withCredentials:true\r\n        })\r\n}\r\n\r\nexport const delUser = (id) => {\r\n    return axios.delete(baseUrl + `follow/${id}`,\r\n           {withCredentials:true,\r\n             headers : {\r\n                \"API-KEY\": API\r\n             }\r\n           })\r\n}\r\n\r\nexport const addUser = (id) => {\r\n    return axios.post(baseUrl + `follow/${id}`,{},\r\n           {withCredentials:true,\r\n               headers:{\r\n                  \"API-KEY\": API\r\n              }\r\n           })\r\n}\r\n\r\nexport const getProfileInfo = (id) => {\r\n    return axios.get(baseUrl + `profile/${id}`,\r\n    {\r\n    withCredentials:true\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const getStatus = (id) => {\r\n    return axios.get(baseUrl + `profile/status/${id}`,\r\n        {\r\n            withCredentials:true\r\n        })\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return axios.put(baseUrl + `profile/status/`,\r\n        {\r\n        status\r\n        },\r\n        {\r\n            withCredentials:true,\r\n            headers:{\r\n                              \"API-KEY\": API\r\n                    }\r\n        })\r\n}\r\n\r\nexport const getAuth = () => {\r\n    return axios.get(baseUrl + `auth/me`,\r\n    {\r\n    withCredentials:true\r\n    })\r\n}\r\n\r\nexport const logIn = (email,password,rememberMe) => {\r\n    return axios.post(baseUrl + `auth/login`,\r\n    {\r\n        email,\r\n        password,\r\n        rememberMe\r\n    },\r\n    {\r\n        withCredentials:true,\r\n        headers:{\r\n            \"API-KEY\": API\r\n        }\r\n    })\r\n}\r\n\r\nexport const logOut = () => {\r\n    return axios.delete(baseUrl + `auth/login`,\r\n    {\r\n    withCredentials:true\r\n    })\r\n}\r\n\r\nexport const savePhoto = (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\",file)\r\n    return axios.put(baseUrl + `profile/photo`,\r\n            formData,\r\n            {\r\n                withCredentials:true,\r\n                headers:{\r\n                                  \"API-KEY\": API,\r\n                                  'Content-type' : 'multipart/form-data'\r\n                        }\r\n            })\r\n}\r\n\r\nexport const updateProfile = (newData) => {\r\n    return axios.put(baseUrl + `profile`,\r\n            newData,\r\n            {\r\n                withCredentials:true,\r\n                headers:{\r\n                                  \"API-KEY\": API,\r\n                        }\r\n            })\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import userPhoto from \"./../assets/images/avatar.png\";\r\nimport {getProfileInfo,getStatus,updateStatus,savePhoto,updateProfile} from \"./../api/api.js\";\r\n\r\nconst ADD_LIKE = 'profile/ADD-LIKE';\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst TOGGLE_LOADING = 'profile/TOGGLE-LOADING';\r\nconst SET_PROFILE = 'profile/SET-PROFILE';\r\nconst SET_STATUS = 'profile/SET-STATUS';\r\nconst SET_PHOTO = 'profile/SET-PHOTO'\r\n\r\nlet initialState = {\r\n    profileData : null,\r\n    commentsData : [{id:1,avatar:userPhoto, text:\"Hello\", name:\"Vasya\", likes:23},\r\n            {id:2,avatar: userPhoto, text:\"Nice job!!!\", name:\"Petya\", likes:3}],\r\n    isLoading: false,\r\n    status : \"\"\r\n}\r\n\r\nconst commentsReducer = (state = initialState,action) => {\r\n    switch(action.type){\r\n        case ADD_POST : {\r\n            let newId=state.commentsData[state.commentsData.length-1].id+1\r\n            let newPost = {\r\n            id:newId,\r\n            avatar: userPhoto,\r\n            text: action.postText,\r\n            name:\"Vova\",\r\n            likes:0\r\n            };\r\n            let stateCopy = {...state};\r\n            stateCopy.commentsData =[...state.commentsData];\r\n            stateCopy.commentsData.push(newPost);\r\n            return stateCopy;\r\n        }\r\n        case ADD_LIKE : {\r\n            let stateCopy = {...state}\r\n            stateCopy.commentsData =[...state.commentsData]\r\n            let currentPost=stateCopy.commentsData.find(x => x.id === action.postId);\r\n            currentPost.likes+=1;\r\n            return stateCopy;\r\n        }\r\n        case TOGGLE_LOADING : {\r\n            return {...state,isLoading: action.isLoading};\r\n        }\r\n        case SET_PROFILE : {\r\n            return {...state,profileData: action.profileData};\r\n        }\r\n        case SET_STATUS : {\r\n            return {...state,status: action.status};\r\n        }\r\n        case SET_PHOTO : {\r\n                    return {...state,profileData: {...state.profileData,photos: action.photos}};\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const addPost = (text) => ({type:ADD_POST,postText:text});\r\nexport const addLike = (id) => ({type:ADD_LIKE,postId:parseInt(id)});\r\nexport const toggleLoading = (isLoading) => ({type:TOGGLE_LOADING,isLoading});\r\nexport const setProfile = (profileData) => ({type:SET_PROFILE,profileData});\r\nexport const setStatus = (status) => ({type:SET_STATUS,status});\r\nexport const setPhoto = (photos) => ({type:SET_PHOTO,photos});\r\n\r\n\r\nexport const getProfileInfoFull = (id) =>async (dispatch) => {\r\n                dispatch(toggleLoading(true));\r\n                let response = await getProfileInfo(id)\r\n                dispatch(toggleLoading(false));\r\n                dispatch(setProfile(response.data));\r\n}\r\n\r\n\r\nexport const getUserStatusFull = (id) =>async (dispatch) => {\r\n                let response = await getStatus(id)\r\n                dispatch(setStatus(response.data));\r\n}\r\n\r\n\r\nexport const updateStatusFull = (text) => async (dispatch) => {\r\n                    let response = await updateStatus(text)\r\n                    if(response.data.resultCode === 0){\r\n                        dispatch(setStatus(text));\r\n                    }\r\n}\r\n\r\nexport const savePhotoFull = (file) => async (dispatch) => {\r\n    let response = await savePhoto(file)\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setPhoto(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const updateProfileFull = (newData) => async (dispatch) => {\r\n    let response = await updateProfile(newData)\r\n}\r\n\r\n\r\nexport default commentsReducer\r\n","import \"./Header.css\";\r\nimport icon from \"./../../assets/images/icon.png\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nconst Header = (param) => {\r\n          return (\r\n              <header className='common-header'>\r\n                          <img src={icon} />\r\n                          <span className=\"siteName\">Hello</span>\r\n                          <span className=\"loginBlock\">\r\n                          {param.login ? <span><button className=\"link\" id=\"logOut\" onClick={param.logOutFull}>Log out </button> {param.login}</span> :<NavLink className=\"link\" id=\"login\" to=\"/logIn\">Log in</NavLink>}\r\n                          </span>\r\n              </header>\r\n          )\r\n      }\r\nexport default Header;","import loading from \"./../../../assets/images/Loading.svg\";\r\nimport React from 'react';\r\n\r\n\r\nconst Loading = (param) => {\r\n    return (\r\n                    <div className=\"Loading\">\r\n                        {param.isLoading ? <span><img src={loading} /><br/> API is very slow if you waiting more than 30 seconds reload</span> : null }\r\n                    </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import {getAuth,logIn,logOut} from \"./../api/api.js\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET-USER-DATA';\r\n\r\nlet initialState = {\r\n    id : null,\r\n    login : null,\r\n    email : null,\r\n    isAuth : false\r\n}\r\n\r\nconst authReducer = (state = initialState,action) => {\r\n    switch(action.type){\r\n        case SET_USER_DATA : {\r\n            return {...state,...action.userData}\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setUserData = (id,login,email,isAuth) => ({type:SET_USER_DATA,userData: {id,login,email,isAuth} });\r\n\r\nexport const getAuthFull = () => async (dispatch) => {\r\n        let response = await getAuth()\r\n        if(response.data.resultCode===0){\r\n            let {id,login,email} = response.data.data\r\n            dispatch(setUserData(id,login,email,true));\r\n        }\r\n    }\r\n\r\n\r\nexport const logInFull = (email,password,rememberMe) => async (dispatch) => {\r\n        let response = await logIn(email,password,rememberMe);\r\n\r\n            if(response.data.resultCode===0){\r\n                dispatch(getAuthFull());\r\n            }\r\n            else\r\n            {\r\n               let message = (response.data.messages.length > 0) ? response.data.messages[0] : \"Some error\";\r\n               dispatch(stopSubmit(\"login\",{_error: message}));\r\n            }\r\n    }\r\n\r\n\r\nexport const logOutFull = (email,password,rememberMe) => async (dispatch) => {\r\n        let response = await logOut();\r\n            if(response.data.resultCode===0){\r\n                dispatch(setUserData(null,null,null,false));\r\n            }\r\n    }\r\n\r\n\r\nexport default authReducer","import {connect} from \"react-redux\";\r\nimport Header from \"./Header.js\";\r\nimport * as axios from \"axios\";\r\nimport Loading from \"./../common/Loading/Loading.js\"\r\nimport {logOutFull} from \"./../../redux/authReducer.js\"\r\nimport {getAuth} from \"./../../api/api.js\"\r\nimport {getLoginFromState} from \"./../../redux/usersSelectors.js\";\r\nimport React,{PureComponent} from 'react';\r\n\r\nclass HeaderAPI extends PureComponent{\r\n\r\n    render(){\r\n        return (\r\n        <div>\r\n            <Header {...this.props}/>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        login : getLoginFromState(state),\r\n    }\r\n)\r\n\r\n\r\n\r\nconst UsersContainer = connect (mapStateToProps,{logOutFull})(HeaderAPI);\r\n\r\nexport default UsersContainer;","import \"./Nav.css\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nconst Nav = (param) => {\r\n    return (\r\n            <nav className='common-nav'>\r\n                             <NavLink className=\"link\" to=\"/users\">Find users</NavLink>\r\n                             <NavLink className=\"link\" to=\"/chats\">Chats</NavLink>\r\n                             <NavLink className=\"link\" to=\"/profile\">Profile</NavLink>\r\n                             <NavLink className=\"link\" to=\"/profileSettings\">ProfileSettings</NavLink>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import \"./Dialog.css\"\r\nimport {NavLink} from 'react-router-dom'\r\nimport React from 'react';\r\n\r\nconst Dialog = (param) => {\r\nlet path = \"/chats/\" + param.id;\r\n    return (\r\n                <div className=\"dialog\" id={param.id}>\r\n                <NavLink to={path} >\r\n                    {param.name}\r\n                </NavLink>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import \"./Message.css\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nconst Message = (param) => {\r\n    return (\r\n                <div className=\"message\" id={param.id}>\r\n                    {param.name} : {param.text}\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import \"./Dialogs.css\";\r\nimport {NavLink,Redirect} from 'react-router-dom';\r\nimport Dialog from \"./Dialog.js\";\r\nimport Message from \"./Message.js\";\r\nimport React from 'react';\r\nimport {reduxForm,Field} from \"redux-form\";\r\n\r\nconst SendMessageForm = (param) => {\r\n    return (\r\n            <form onSubmit={param.handleSubmit}>\r\n            <div><Field placeholder={\"Enter your message\"} name={\"message\"} component={\"textarea\"} /></div>\r\n            <div><button>Send</button></div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst ReduxSendMessageForm = reduxForm({form: 'sendMessage'})(SendMessageForm)\r\n\r\nconst Dialogs = (param) => {\r\n\r\nlet messages = param.messagesData.map(el =>(<Message name = {el.name} text = {el.text} key  = {el.id} id = {el.id} />))\r\n\r\nlet dialogs = param.dialogsData.map(el =>(<Dialog name={el.name} id = {el.id}  key  = {el.id} />))\r\n\r\nconst onSendMessage = (values) => {\r\n    param.addMessage(values.message);\r\n}\r\n\r\n    return (\r\n            <div className=\"chats\">\r\n            <div className='dialogs'>\r\n                <span className=\"dialogHead\">Dialogs</span>\r\n                {dialogs}\r\n            </div>\r\n            <div className=\"messages\">\r\n                 <span className=\"dialogName\">{param.name}</span>\r\n                 {messages}\r\n                 <div className=\"sendMessage\">\r\n                    <ReduxSendMessageForm onSubmit={onSendMessage} />\r\n                 </div>\r\n           </div>\r\n           </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const ADD_MESSAGE = 'chats/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n   dialogsData : [{name: \"Stas\",id: 1}, {name: \"Kostya\",id: 2},{name: \"Vasya\",id: 3},{name: \"Ivan\",id: 4}],\r\n   messagesData : [{id:1 , name: \"Stas\", text: \"hi\"}, {id:2 , name: \"Vova\", text: \"hello\"},{id:3, name: \"Stas\", text: \"What`s up?\"},{id:4, name: \"Vova\", text: \"All is Fine\"}],\r\n   chatName : \"Stas\"\r\n}\r\n\r\nconst chatsReducer = (state = initialState,action) => {\r\n    switch(action.type){\r\n        case ADD_MESSAGE:{\r\n            let newId=state.messagesData[state.messagesData.length-1].id+1;\r\n            let newMessage = {id:newId , name: \"Vova\", text: action.messageText};\r\n            let stateCopy = {...state};\r\n            stateCopy.messagesData = [...state.messagesData];\r\n            stateCopy.messagesData.push(newMessage);\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const addMessage = (text) => ({type:ADD_MESSAGE,messageText:text});\r\n\r\nexport default chatsReducer","import Dialogs from \"./Dialogs.js\";\r\nimport React from 'react';\r\nimport {addMessage} from \"./../../redux/chatsReducer.js\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"./../../hoc/withAuthRedirect.js\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogsDataFromState,getNameFromState,getMessagesDataFromState} from \"./../../redux/usersSelectors.js\";\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        dialogsData : getDialogsDataFromState(state),\r\n        name: getNameFromState(state),\r\n        messagesData: getMessagesDataFromState(state)\r\n    }\r\n)\r\n\r\nexport default compose(connect (mapStateToProps,{addMessage}),\r\n                       withAuthRedirect\r\n                      )(Dialogs)\r\n","import \"./Comment.css\"\r\nimport React from 'react'\r\n\r\n\r\n\r\nconst Comment = (param) => {\r\n\r\n    let postElement = React.createRef();\r\n\r\n    let onAddLike = () => {\r\n        let id = postElement.current.id;\r\n        param.addLike(id)\r\n    }\r\n\r\n    return (\r\n                    <div className=\"comment\" id={param.id} ref={postElement}>\r\n                        <img className=\"avatar\" src={param.avatar} />\r\n                        <span className=\"username\">{param.name}</span>\r\n                        <div className=\"c-text\">{param.text}</div>\r\n                        <div className=\"likes\" onClick={onAddLike}>likes {param.likes}</div>\r\n                    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Comment;\r\n//        let count = newLikeElement.current.value;","import \"./ProfileStatus.css\";\r\nimport {getStatus} from \"./../../api/api.js\"\r\nimport React,{useState, useEffect} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = React.memo(param =>{\r\n\r\n        let [editMode,setEditMode] = useState(false);\r\n        let [status,setStatus] = useState(param.status);\r\n\r\n        useEffect(() => {\r\n            setStatus(param.status)\r\n        }, [param.status])\r\n\r\n         const activateEditMode = () => {\r\n            if(param.isOwner){\r\n            setEditMode(true);\r\n            }\r\n         }\r\n\r\n         const deactivateEditMode = () => {\r\n            setEditMode(false);\r\n            param.updateStatusFull(status);\r\n         }\r\n\r\n         const onStatusChange = (e) => {\r\n             setStatus(e.currentTarget.value)\r\n         }\r\n\r\n        return (\r\n           <div className=\"status\">\r\n                {!editMode ?\r\n                <div><span onDoubleClick={activateEditMode}>status: {status ? status : \"no status\"}</span></div>\r\n                :\r\n                <div>status: <textarea onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}></textarea></div>\r\n                }\r\n           </div>\r\n        )\r\n});\r\n\r\nexport default ProfileStatusWithHooks;","import \"./ProfileTop.css\";\r\nimport React from \"react\";\r\n\r\nimport ProfileStatus from \"./ProfileStatusWithHooks.js\";\r\nimport userPhoto from \"./../../assets/images/avatar.png\";\r\n\r\n\r\nconst ProfileTop = (param) => {\r\n\r\nconst onPhotoSelected = (e) =>{\r\n    if(e.target.files.length){\r\n        param.savePhotoFull(e.target.files[0])\r\n    }\r\n    }\r\n\r\n    if(!param.profileData){\r\n    return (\r\n        <div className=\"profileTop\">\r\n        </div>\r\n    )\r\n    }\r\n    else{\r\n    return (\r\n    <div className=\"profileTop\" id={param.profileData.userId}>\r\n        <div className=\"avatar\"><img src={param.profileData.photos.large != null ? param.profileData.photos.large : userPhoto} />\r\n        {param.isOwner ? <input  type={\"file\"} onChange={onPhotoSelected}/> : \"\"}\r\n        </div>\r\n        <div className=\"aboutMe\">About me: {param.profileData.aboutMe}</div>\r\n        <div className=\"username\">Full name: {param.profileData.fullName}</div>\r\n        <ProfileStatus {...param} />\r\n    </div>\r\n\r\n    )\r\n    }\r\n}\r\n\r\nexport default ProfileTop;","import \"./Profile.css\";\r\nimport Comment from \"./Comment.js\";\r\nimport ProfileTop from \"./ProfileTop.js\";\r\nimport React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {reduxForm,Field} from \"redux-form\";\r\n\r\nconst AddPostForm = (param) => {\r\n    return (\r\n            <form onSubmit={param.handleSubmit}>\r\n            <div><Field placeholder={\"Enter your message\"} name={\"postText\"} component={\"textarea\"} /></div>\r\n            <div><button>Send</button></div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst ReduxAddPostForm = reduxForm({form: 'addPost'})(AddPostForm)\r\n\r\nconst Profile = (param) => {\r\n\r\n    let comments = param.profile.commentsData.map(el =>(<Comment avatar={el.avatar} text={el.text} name={el.name} likes={el.likes} id={el.id} addLike={param.addLike} key = {el.id}/>))\r\n\r\n    let onAddPost = (values) => {\r\n        param.addPost(values.postText)\r\n    }\r\n    return (\r\n            <div className='profile'>\r\n                    <ProfileTop {...param}/>\r\n                <div className=\"comments\">\r\n                    {comments}\r\n                </div>\r\n                <div className=\"post\">\r\n                     <ReduxAddPostForm onSubmit={onAddPost}/>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import Profile from \"./Profile.js\";\r\nimport {connect} from \"react-redux\";\r\nimport {setProfile,addPost,addLike,toggleLoading,getProfileInfoFull,getUserStatusFull,updateStatusFull,savePhotoFull} from \"./../../redux/profileReducer.js\";\r\nimport Loading from \"./../common/Loading/Loading.js\";\r\nimport * as axios from \"axios\";\r\nimport React,{PureComponent} from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"./../../hoc/withAuthRedirect.js\";\r\nimport {compose} from \"redux\";\r\nimport {getProfileFromState,getIsLoadingFromStateProfile,getProfileDataFromStateProfile,getStatusFromState,getAuthorizedUserIdFromState} from \"./../../redux/usersSelectors.js\";\r\n\r\nclass ProfileAPI extends PureComponent{\r\n\r\n    refreshProfile(){\r\n            let userId = this.props.match.params.userId;\r\n            if(!userId){\r\n                userId = this.props.authorizedUserId;\r\n            }\r\n            this.props.getProfileInfoFull(userId);\r\n            this.props.getUserStatusFull(userId);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.match.params.userId != prevProps.match.params.userId)\r\n        this.refreshProfile()\r\n    }\r\n\r\n//    shouldComponentUpdate(nextProps,nextState){\r\n//        return (nextProps!==this.props) || (nextState!==this.state);\r\n//    }\r\n\r\n    render(){\r\n        console.log(\"profileRender\");\r\n        return (\r\n            <div>\r\n            <Loading isLoading = {this.props.isLoading} />\r\n            <Profile isOwner={!this.props.match.params.userId} {...this.props} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        profile: getProfileFromState(state),\r\n        isLoading : getIsLoadingFromStateProfile(state),\r\n        profileData : getProfileDataFromStateProfile(state),\r\n        status : getStatusFromState(state),\r\n        authorizedUserId : getAuthorizedUserIdFromState(state)\r\n    }\r\n)\r\n\r\nexport default compose(connect (mapStateToProps,{addPost,addLike,toggleLoading,setProfile,getProfileInfoFull,getUserStatusFull,updateStatusFull,savePhotoFull}),\r\n                       withRouter,\r\n                       withAuthRedirect\r\n                       )(ProfileAPI)","import \"./LogIn.css\";\r\nimport {reduxForm,Field} from \"redux-form\";\r\nimport {required,minLengthCreator} from \"./../../validators/validators.js\";\r\nimport {Input} from \"./../common/FormsControls/FormsControls.js\";\r\nimport {logInFull} from \"./../../redux/authReducer.js\"\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nlet minLength4 = minLengthCreator(4);\r\n\r\nconst LogInForm = ({handleSubmit,error}) => {\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n            <div><Field placeholder={\"email\"} name={\"email\"} component={Input} validate={[required]} /></div>\r\n            <div><Field type={\"password\"} name={\"password\"} placeholder={\"Password\"} component={Input} validate={[required,minLength4]} /></div>\r\n            <div>remember me<Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"}/></div>\r\n            {error ? <div className=\"generalError\">{error}</div> : \"\"}\r\n            <div><button>Log in</button></div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst ReduxLogInForm = reduxForm({form: 'login'})(LogInForm)\r\n\r\nconst LogIn = (param) => {\r\n\r\nconst onSubmit = (formData) => {\r\n    param.logInFull(formData.email,formData.password,formData.rememberMe)\r\n}\r\n\r\n    if(param.isAuth){\r\n    return <Redirect to=\"/profile\"/>\r\n    }\r\n    return (\r\n        <div className=\"loginMain\">\r\n            <h3>Log In</h3>\r\n            <ReduxLogInForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToParam = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToParam,{logInFull}) (LogIn);\r\n","import \"./User.css\"\r\nimport React from 'react'\r\nimport userPhoto from \"./../../assets/images/avatar.png\"\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst User = (param) => {\r\n\r\n    let userElement = React.createRef();\r\n\r\n    let onDelUser = () => {\r\n        param.delUserFull(userElement.current.id);\r\n    }\r\n\r\n    let onAddUser = () => {\r\n        param.addUserFull(userElement.current.id)\r\n    }\r\n    return (\r\n                    <div className=\"user\" id={param.id} ref={userElement}>\r\n                        <NavLink to={\"/profile/\" + param.id}>\r\n                        <img className=\"avatar\" alt=\"avatar\" src={param.avatar != null ? param.avatar : userPhoto} />\r\n                        </NavLink>\r\n                        <span className=\"username\">{param.name}</span>\r\n                        <div className=\"status\">{param.status}</div>\r\n                        <div className=\"city\">City</div>\r\n                        <div className=\"country\">Country</div>\r\n                        {param.friend ? <button disabled={param.isAdding} className=\"delAddUser\" onClick={onDelUser}>Delete</button> : <button disabled={param.isAdding} className=\"delAddUser\" onClick={onAddUser}>Add</button>}\r\n                    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default User;\r\n","import \"./Users.css\";\r\nimport User from \"./User.js\";\r\nimport React from 'react';\r\n\r\n\r\nconst Users = (param) => {\r\n let pagesCount = Math.ceil(param.totalCount / param.pageSize);\r\n         let pages =[]\r\n         for(let i = 1; i <= pagesCount; i++){\r\n             pages.push(i)\r\n         }\r\n\r\n let onRight = () => {\r\n    if(param.rightLimit<pagesCount){param.changePages(20);}\r\n    else{ param.changePage(pagesCount-param.rightLimit)}\r\n }\r\n\r\n let onLeft = () => {\r\n    param.changePages(-20);\r\n }\r\n\r\n return <div className='users'>\r\n        {param.users.map(el =>(<User avatar={el.photos.small} status={el.status} name={el.name}\r\n        friend={el.followed} id={el.id} {...param} key = {el.id}/>))}\r\n        <div className=\"pages\">\r\n        {(param.leftLimit === 1) ? \"\" : <button onClick={onLeft}>{\"<\"}</button>}\r\n        {pages.filter( p => (p>=param.leftLimit && p<=param.rightLimit)).map(p => {\r\n            return <span className={param.currentPage === p && \"selected\"} onClick={(e) => { param.onPageChanged(p); } }>{p}</span>\r\n        }\r\n        )}\r\n        {(param.rightLimit > pagesCount) ? \"\" : <button onClick={onRight}>{\">\"}</button>}\r\n        </div>\r\n        </div>\r\n\r\n}\r\n\r\nexport default Users;\r\n","import {getUsers,delUser,addUser} from \"./../api/api.js\"\r\n\r\nconst ADD_USER = 'users/ADD-USER';\r\nconst DEL_USER = 'users/DEL-USER';\r\nconst SET_USERS = 'users/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET-CURRENT-PAGE';\r\nconst SET_TOTAL_COUNT = 'users/SET-TOTAL-COUNT';\r\nconst TOGGLE_LOADING = 'users/TOGGLE-LOADING';\r\nconst TOGGLE_ADDING = 'users/TOGGLE-ADDING';\r\nconst CHANGE_PAGES = 'users/CHANGE-PAGES';\r\n\r\nlet initialState = {\r\n    users : [],\r\n    pageSize : 10,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isLoading : false,\r\n    isAdding : false,\r\n    leftLimit : 1,\r\n    rightLimit : 20\r\n}\r\n\r\nconst usersReducer = (state = initialState,action) => {\r\n\r\n    switch(action.type){\r\n        case ADD_USER :\r\n        return {\r\n            ...state,\r\n            users: state.users.map(u =>{\r\n            if(u.id === parseInt(action.userId)){\r\n                return {...u,followed:true};\r\n            }\r\n            return u;\r\n            })\r\n        }\r\n        case DEL_USER :\r\n        return {\r\n            ...state,\r\n            users: state.users.map(u =>{\r\n            if(u.id === parseInt(action.userId)){\r\n                return {...u,followed:false};\r\n            }\r\n            return u;\r\n            })\r\n        }\r\n        case SET_USERS : {\r\n              return {...state,users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE : {\r\n              return {...state,currentPage: action.page};\r\n        }\r\n        case SET_TOTAL_COUNT : {\r\n              return {...state,totalCount: action.totalCount};\r\n        }\r\n        case TOGGLE_LOADING : {\r\n              return {...state,isLoading: action.isLoading};\r\n        }\r\n        case TOGGLE_ADDING : {\r\n              return {...state,isAdding: action.isAdding};\r\n        }\r\n        case CHANGE_PAGES : {\r\n              return {...state,leftLimit: (state.leftLimit+action.count),rightLimit: (state.rightLimit+action.count)};\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const addUserB = (userId) =>({type:ADD_USER,userId});\r\nexport const delUserB = (userId) => ({type:DEL_USER,userId});\r\nexport const setUsers = (users) => ({type:SET_USERS,users});\r\nexport const setCurrentPage = (page) => ({type:SET_CURRENT_PAGE,page});\r\nexport const setTotalCount = (totalCount) => ({type:SET_TOTAL_COUNT,totalCount});\r\nexport const toggleLoading = (isLoading) => ({type:TOGGLE_LOADING,isLoading});\r\nexport const toggleAdding = (isAdding) => ({type:TOGGLE_ADDING,isAdding});\r\nexport const changePages = (count) => ({type:CHANGE_PAGES,count});\r\n\r\nexport const getUsersFull = (currentPage,pageSize) => async (dispatch) => {\r\n                dispatch(setCurrentPage(currentPage));\r\n                dispatch(toggleLoading(true));\r\n                let response = await getUsers(currentPage,pageSize)\r\n                    dispatch(toggleLoading(false));\r\n                    dispatch(setUsers(response.data.items));\r\n                    dispatch(setTotalCount(response.data.totalCount));\r\n}\r\n\r\n\r\nexport const addUserFull = (id) => async (dispatch) => {\r\n                console.log(\"hi\");\r\n                dispatch(toggleAdding(true));\r\n                let response = await addUser(id)\r\n                if(response.data.resultCode === 0){\r\n                    dispatch(addUserB(id));\r\n                }\r\n                dispatch(toggleAdding(false));\r\n\r\n}\r\n\r\n\r\nexport const delUserFull = (id) =>async (dispatch) => {\r\n                dispatch(toggleAdding(true));\r\n                let response = await delUser(id)\r\n                if(response.data.resultCode === 0){\r\n                   dispatch(delUserB(id));\r\n                }\r\n                dispatch(toggleAdding(false));\r\n}\r\n\r\n\r\n\r\nexport default usersReducer\r\n","import {connect} from \"react-redux\";\r\nimport Users from \"./Users.js\";\r\nimport React,{PureComponent} from 'react'\r\nimport Loading from \"./../common/Loading/Loading.js\"\r\nimport {getUsersFull,addUserFull,delUserFull,changePages} from \"./../../redux/usersReducer.js\"\r\nimport {getUsersFromState,getPageSizeFromState,getTotalCountFromState,\r\ngetCurrentPageState,getIsLoadingFromStateUsers,getIsAddingFromState,getUsersWithPhoto,getLeftLimit,getRightLimit} from \"./../../redux/usersSelectors.js\";\r\nimport {withAuthRedirect} from \"./../../hoc/withAuthRedirect.js\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass UsersAPI extends PureComponent{\r\n\r\n    componentDidMount(){\r\n            this.props.getUsersFull(this.props.currentPage,this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (page) => {\r\n            this.props.getUsersFull(page,this.props.pageSize);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div>\r\n        Users\r\n        <Loading isLoading = {this.props.isLoading} />\r\n        <Users {...this.props} onPageChanged = {this.onPageChanged} />\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        users : getUsersFromState(state),\r\n//        users : getUsersWithPhoto(state),\r\n        pageSize: getPageSizeFromState(state),\r\n        totalCount : getTotalCountFromState(state),\r\n        currentPage: getCurrentPageState(state),\r\n        isLoading : getIsLoadingFromStateUsers(state),\r\n        isAdding : getIsAddingFromState(state),\r\n        leftLimit : getLeftLimit(state),\r\n        rightLimit : getRightLimit(state)\r\n    }\r\n)\r\n\r\nexport default compose(connect (mapStateToProps,{getUsersFull,addUserFull,delUserFull,changePages}),\r\n                                      withAuthRedirect\r\n                                      )(UsersAPI)","import {getAuthFull} from \"./authReducer.js\";\r\n\r\nconst SET_INITIALIZED = 'app/SET-INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized : false,\r\n}\r\n\r\nconst appReducer = (state = initialState,action) => {\r\n    switch(action.type){\r\n        case SET_INITIALIZED : {\r\n            return {...state,initialized:true}\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setInitializedSuccess = () => ({type:SET_INITIALIZED});\r\n\r\nexport const initializeApp = () =>{\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthFull());\r\n        promise.then(() => {\r\n        dispatch(setInitializedSuccess());\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default appReducer","import logo from './logo.svg';\nimport {connect} from \"react-redux\";\nimport './App.css';\nimport React from 'react';\nimport HeaderContainer from './components/Header/HeaderContainer.js';\nimport Nav from './components/Nav/Nav.js';\nimport Loading from './components/common/Loading/Loading.js';\nimport DialogsContainer from './components/Chats/DialogsContainer.js';\nimport ProfileContainer from './components/Profile/ProfileContainer.js';\nimport LogIn from './components/Login/LogIn.js';\nimport UsersContainer from './components/Users/UsersContainer.js';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport {initializeApp} from \"./redux/appReducer.js\";\n\nconst ProfileSettings = React.lazy(() => import('./components/ProfileSettings/ProfileSettings.js'));\n\nclass App extends React.Component {\n\n    componentDidMount(){\n        this.props.initializeApp();\n    }\n\n    render(){\n    if(!this.props.initialized){return <Loading isLoading={true} />}\n    return (\n        <BrowserRouter>\n        <div className='app-main'>\n            <HeaderContainer />\n            <Nav />\n            <div className=\"content\">\n            <Route path=\"/chats\" render={ () => <DialogsContainer  />} />\n            <Route path=\"/profile/:userId?\" render={ () => <ProfileContainer />} />\n            <Route path=\"/profileSettings\" render={ () =>{return <React.Suspense fallback={<Loading isLoading={true} />}><ProfileSettings /></React.Suspense>}} />\n            <Route path=\"/logIn\" render={ () => <LogIn />} />\n            <Route path=\"/users\" render={ () => <UsersContainer />} />\n            </div>\n        </div>\n        </BrowserRouter>\n    )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized : state.app.initialized,\n})\n\nexport default connect(mapStateToProps,{initializeApp})(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore,combineReducers,applyMiddleware,compose} from \"redux\";\r\nimport commentsReducer from \"./profileReducer.js\";\r\nimport chatsReducer from \"./chatsReducer.js\";\r\nimport usersReducer from \"./usersReducer.js\";\r\nimport authReducer from \"./authReducer.js\";\r\nimport appReducer from \"./appReducer.js\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from \"redux-form\";\r\n\r\nlet reducers = combineReducers({\r\n    profile: commentsReducer,\r\n    chats: chatsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/reduxStore.js\"\nimport {Provider} from \"react-redux\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n//    <Provider dispatch = {store.dispatch.bind(store)}>\n//    </Provider>","module.exports = __webpack_public_path__ + \"static/media/avatar.ebbbc6a3.png\";","import {Redirect} from 'react-router-dom'\r\nimport React from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({isAuth: state.auth.isAuth})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n            render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n            }\r\n        }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","export const required = (value) => {\r\n    if(value){\r\n        return undefined;\r\n    }\r\n        return 'required field'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n        if(value.length>maxLength){\r\n            return ('max length is '+maxLength)\r\n        }\r\n        return undefined;\r\n}\r\n\r\n\r\nexport const minLengthCreator = (minLength) =>  (value) => {\r\n        if(value.length<minLength){\r\n            return ('min length is '+minLength)\r\n        }\r\n        return undefined;\r\n}\r\n","import \"./FormsControls.css\"\r\nimport React from 'react';\r\n\r\nexport const Textarea = ({input,meta,...param}) => {\r\n    const hasError = meta.error && meta.touched;\r\n        return (\r\n        <div className={hasError ? \"formControl error\" : \"formControl\"}>\r\n        <div>\r\n        <textarea {...input} {...param}/>\r\n        </div>\r\n        {hasError ? <span>{meta.error}</span>:<span></span>}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport const Input = ({input,meta,...param}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n    <div className={hasError ? \"formControl error\" : \"formControl\"}>\r\n    <div>\r\n    <input {...input} {...param}/>\r\n    </div>\r\n    {hasError ? <span>{meta.error}</span>:<span></span>}\r\n    </div>\r\n    )\r\n}"],"sourceRoot":""}