{"version":3,"sources":["assets/images/icon.png","assets/images/Loading.svg","logo.svg","validators/validators.js","components/Header/Header.js","components/common/Loading/Loading.js","api/api.js","redux/authReducer.js","redux/usersSelectors.js","components/Header/HeaderContainer.js","components/Nav/Nav.js","components/Chats/Dialog.js","components/Chats/Message.js","components/Chats/Dialogs.js","redux/chatsReducer.js","hoc/withAuthRedirect.js","components/Chats/DialogsContainer.js","components/Profile/Comment.js","components/Profile/ProfileStatusWithHooks.js","components/Profile/ProfileTop.js","components/Profile/Profile.js","redux/profileReducer.js","components/Profile/ProfileContainer.js","components/common/FormsControls/FormsControls.js","components/Login/LogIn.js","components/Users/User.js","components/Users/Users.js","redux/usersReducer.js","components/Users/UsersContainer.js","redux/appReducer.js","App.js","reportWebVitals.js","redux/reduxStore.js","index.js","assets/images/avatar.png"],"names":["module","exports","minLength","Header","param","className","src","icon","login","id","onClick","logOutFull","to","Loading","isLoading","loading","baseUrl","API","getUsers","currentPage","pageSize","axios","withCredentials","delUser","headers","addUser","getProfileInfo","getStatus","logIn","email","password","rememberMe","initialState","isAuth","setUserData","type","userData","getAuthFull","dispatch","a","response","data","resultCode","authReducer","state","action","getUsersFromState","usersPage","users","getLeftLimit","leftLimit","getRightLimit","rightLimit","getPageSizeFromState","getTotalCountFromState","totalCount","getCurrentPageState","getIsLoadingFromStateUsers","getIsAddingFromState","isAdding","getProfileFromState","profile","getIsLoadingFromStateProfile","getProfileDataFromStateProfile","profileData","getStatusFromState","status","getAuthorizedUserIdFromState","auth","getLoginFromState","getDialogsDataFromState","chats","dialogsData","getNameFromState","chatName","getMessagesDataFromState","messagesData","HeaderAPI","createSelector","filter","el","photos","small","this","props","PureComponent","UsersContainer","connect","Nav","Dialog","path","name","Message","text","ReduxSendMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Dialogs","messages","map","key","dialogs","values","addMessage","message","chatsReducer","newId","length","newMessage","messageText","stateCopy","push","console","log","mapStateToPropsRedirect","withAuthRedirect","Component","RedirectComponent","React","compose","Comment","postElement","createRef","ref","avatar","current","addLike","likes","ProfileStatusWithHooks","memo","useState","editMode","setEditMode","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatusFull","onDoubleClick","ProfileTop","userId","large","userPhoto","fullName","aboutMe","ReduxAddPostForm","Profile","comments","commentsData","addPost","postText","ADD_LIKE","ADD_POST","toggleLoading","setProfile","commentsReducer","newPost","currentPost","find","x","postId","ProfileAPI","match","params","authorizedUserId","getProfileInfoFull","getUserStatusFull","parseInt","withRouter","required","Input","input","meta","hasError","error","touched","minLength4","ReduxLogInForm","validate","logInFull","stopSubmit","_error","formData","User","userElement","alt","friend","disabled","delUserFull","addUserFull","Users","pagesCount","Math","ceil","pages","i","followed","changePages","p","onPageChanged","changePage","toggleAdding","usersReducer","u","page","count","UsersAPI","getUsersFull","items","initialized","appReducer","ProfileSettings","lazy","App","initializeApp","HeaderContainer","render","DialogsContainer","ProfileContainer","Suspense","fallback","app","then","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f670e284.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.bb7d3f0c.png\";","module.exports = __webpack_public_path__ + \"static/media/Loading.4850ba13.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","export const required = (value) => {\r\n    if(value){\r\n        return undefined;\r\n    }\r\n        return 'required field'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n        if(value.length>maxLength){\r\n            return ('max length is '+maxLength)\r\n        }\r\n        return undefined;\r\n}\r\n\r\n\r\nexport const minLengthCreator = (minLength) =>  (value) => {\r\n        if(value.length<minLength){\r\n            return ('min length is '+minLength)\r\n        }\r\n        return undefined;\r\n}\r\n","import \"./Header.css\";\r\nimport icon from \"./../../assets/images/icon.png\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nconst Header = (param) => {\r\n          return (\r\n              <header className='common-header'>\r\n                          <img src={icon} />\r\n                          <span className=\"siteName\">Hello</span>\r\n                          <span className=\"loginBlock\">\r\n                          {param.login ? <span><button className=\"link\" id=\"logOut\" onClick={param.logOutFull}>Log out </button> {param.login}</span> :<NavLink className=\"link\" id=\"login\" to=\"/logIn\">Log in</NavLink>}\r\n                          </span>\r\n              </header>\r\n          )\r\n      }\r\nexport default Header;","import loading from \"./../../../assets/images/Loading.svg\";\r\nimport React from 'react';\r\n\r\n\r\nconst Loading = (param) => {\r\n    return (\r\n                    <div className=\"Loading\">\r\n                        {param.isLoading ? <span><img src={loading} /><br/> API is very slow if you waiting more than 30 seconds reload</span> : null }\r\n                    </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import * as axios from \"axios\";\r\n\r\n\r\nconst baseUrl = \"https://social-network.samuraijs.com/api/1.0/\"\r\nconst API = \"47c1c277-a323-4dc6-9ac6-d95a5b0c0e6c\"\r\n\r\nexport const getUsers = (currentPage,pageSize) => {\r\n    return axios.get(baseUrl + `users?page=${currentPage}&count=${pageSize}`,\r\n        {\r\n            withCredentials:true\r\n        })\r\n}\r\n\r\nexport const delUser = (id) => {\r\n    return axios.delete(baseUrl + `follow/${id}`,\r\n           {withCredentials:true,\r\n             headers : {\r\n                \"API-KEY\": API\r\n             }\r\n           })\r\n}\r\n\r\nexport const addUser = (id) => {\r\n    return axios.post(baseUrl + `follow/${id}`,{},\r\n           {withCredentials:true,\r\n               headers:{\r\n                  \"API-KEY\": API\r\n              }\r\n           })\r\n}\r\n\r\nexport const getProfileInfo = (id) => {\r\n    return axios.get(baseUrl + `profile/${id}`,\r\n    {\r\n    withCredentials:true\r\n    })\r\n}\r\n\r\nexport const getStatus = (id) => {\r\n    return axios.get(baseUrl + `profile/status/${id}`,\r\n        {\r\n            withCredentials:true\r\n        })\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return axios.put(baseUrl + `profile/status/`,\r\n        {\r\n        status\r\n        },\r\n        {\r\n            withCredentials:true,\r\n            headers:{\r\n                              \"API-KEY\": API\r\n                    }\r\n        })\r\n}\r\n\r\nexport const getAuth = () => {\r\n    return axios.get(baseUrl + `auth/me`,\r\n    {\r\n    withCredentials:true\r\n    })\r\n}\r\n\r\nexport const logIn = (email,password,rememberMe) => {\r\n    return axios.post(baseUrl + `auth/login`,\r\n    {\r\n        email,\r\n        password,\r\n        rememberMe\r\n    },\r\n    {\r\n        withCredentials:true,\r\n        headers:{\r\n            \"API-KEY\": API\r\n        }\r\n    })\r\n}\r\n\r\nexport const logOut = () => {\r\n    return axios.delete(baseUrl + `auth/login`,\r\n    {\r\n    withCredentials:true\r\n    })\r\n}\r\n","import {getAuth,logIn,logOut} from \"./../api/api.js\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET-USER-DATA';\r\n\r\nlet initialState = {\r\n    id : null,\r\n    login : null,\r\n    email : null,\r\n    isAuth : false\r\n}\r\n\r\nconst authReducer = (state = initialState,action) => {\r\n    switch(action.type){\r\n        case SET_USER_DATA : {\r\n            return {...state,...action.userData}\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setUserData = (id,login,email,isAuth) => ({type:SET_USER_DATA,userData: {id,login,email,isAuth} });\r\n\r\nexport const getAuthFull = () => async (dispatch) => {\r\n        let response = await getAuth()\r\n        if(response.data.resultCode===0){\r\n            let {id,login,email} = response.data.data\r\n            dispatch(setUserData(id,login,email,true));\r\n        }\r\n    }\r\n\r\n\r\nexport const logInFull = (email,password,rememberMe) => async (dispatch) => {\r\n        let response = await logIn(email,password,rememberMe);\r\n\r\n            if(response.data.resultCode===0){\r\n                dispatch(getAuthFull());\r\n            }\r\n            else\r\n            {\r\n               let message = (response.data.messages.length > 0) ? response.data.messages[0] : \"Some error\";\r\n               dispatch(stopSubmit(\"login\",{_error: message}));\r\n            }\r\n    }\r\n\r\n\r\nexport const logOutFull = (email,password,rememberMe) => async (dispatch) => {\r\n        let response = await logOut();\r\n            if(response.data.resultCode===0){\r\n                dispatch(setUserData(null,null,null,false));\r\n            }\r\n    }\r\n\r\n\r\nexport default authReducer","import {createSelector} from \"reselect\";\r\n\r\n//Users\r\nexport const getUsersFromState = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getLeftLimit = (state) => {\r\n    return state.usersPage.leftLimit;\r\n}\r\n\r\nexport const getRightLimit = (state) => {\r\n    return state.usersPage.rightLimit;\r\n}\r\n\r\nexport const getPageSizeFromState = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalCountFromState = (state) => {\r\n    return state.usersPage.totalCount;\r\n}\r\n\r\nexport const getCurrentPageState = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsLoadingFromStateUsers = (state) => {\r\n    return state.usersPage.isLoading;\r\n}\r\n\r\nexport const getIsAddingFromState = (state) => {\r\n    return state.usersPage.isAdding;\r\n}\r\n//Profile\r\nexport const getProfileFromState = (state) => {\r\n    return state.profile;\r\n}\r\n\r\nexport const getIsLoadingFromStateProfile = (state) => {\r\n    return state.profile.isLoading;\r\n}\r\n\r\nexport const getProfileDataFromStateProfile = (state) => {\r\n    return state.profile.profileData;\r\n}\r\n\r\nexport const getStatusFromState = (state) => {\r\n    return state.profile.status;\r\n}\r\n//Auth\r\nexport const getAuthorizedUserIdFromState = (state) => {\r\n    return state.auth.id;\r\n}\r\n\r\nexport const getLoginFromState = (state) => {\r\n    return state.auth.login;\r\n}\r\n//Chats\r\nexport const getDialogsDataFromState = (state) => {\r\n    return state.chats.dialogsData;\r\n}\r\n\r\nexport const getNameFromState = (state) => {\r\n    return state.chats.chatName;\r\n}\r\n\r\nexport const getMessagesDataFromState = (state) => {\r\n    return state.chats.messagesData;\r\n}\r\n//More difficult\r\nexport const getUsersWithPhoto = createSelector(getUsersFromState,(users) => {\r\n    return users.filter(el => (el.photos.small));\r\n});","import {connect} from \"react-redux\";\r\nimport Header from \"./Header.js\";\r\nimport * as axios from \"axios\";\r\nimport Loading from \"./../common/Loading/Loading.js\"\r\nimport {logOutFull} from \"./../../redux/authReducer.js\"\r\nimport {getAuth} from \"./../../api/api.js\"\r\nimport {getLoginFromState} from \"./../../redux/usersSelectors.js\";\r\nimport React,{PureComponent} from 'react';\r\n\r\nclass HeaderAPI extends PureComponent{\r\n\r\n    render(){\r\n        return (\r\n        <div>\r\n            <Header {...this.props}/>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        login : getLoginFromState(state),\r\n    }\r\n)\r\n\r\n\r\n\r\nconst UsersContainer = connect (mapStateToProps,{logOutFull})(HeaderAPI);\r\n\r\nexport default UsersContainer;","import \"./Nav.css\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nconst Nav = (param) => {\r\n    return (\r\n            <nav className='common-nav'>\r\n                             <NavLink className=\"link\" to=\"/users\">Find users</NavLink>\r\n                             <NavLink className=\"link\" to=\"/chats\">Chats</NavLink>\r\n                             <NavLink className=\"link\" to=\"/profile\">Profile</NavLink>\r\n                             <NavLink className=\"link\" to=\"/profileSettings\">ProfileSettings</NavLink>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import \"./Dialog.css\"\r\nimport {NavLink} from 'react-router-dom'\r\nimport React from 'react';\r\n\r\nconst Dialog = (param) => {\r\nlet path = \"/chats/\" + param.id;\r\n    return (\r\n                <div className=\"dialog\" id={param.id}>\r\n                <NavLink to={path} >\r\n                    {param.name}\r\n                </NavLink>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import \"./Message.css\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nconst Message = (param) => {\r\n    return (\r\n                <div className=\"message\" id={param.id}>\r\n                    {param.name} : {param.text}\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import \"./Dialogs.css\";\r\nimport {NavLink,Redirect} from 'react-router-dom';\r\nimport Dialog from \"./Dialog.js\";\r\nimport Message from \"./Message.js\";\r\nimport React from 'react';\r\nimport {reduxForm,Field} from \"redux-form\";\r\n\r\nconst SendMessageForm = (param) => {\r\n    return (\r\n            <form onSubmit={param.handleSubmit}>\r\n            <div><Field placeholder={\"Enter your message\"} name={\"message\"} component={\"textarea\"} /></div>\r\n            <div><button>Send</button></div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst ReduxSendMessageForm = reduxForm({form: 'sendMessage'})(SendMessageForm)\r\n\r\nconst Dialogs = (param) => {\r\n\r\nlet messages = param.messagesData.map(el =>(<Message name = {el.name} text = {el.text} key  = {el.id} id = {el.id} />))\r\n\r\nlet dialogs = param.dialogsData.map(el =>(<Dialog name={el.name} id = {el.id}  key  = {el.id} />))\r\n\r\nconst onSendMessage = (values) => {\r\n    param.addMessage(values.message);\r\n}\r\n\r\n    return (\r\n            <div className=\"chats\">\r\n            <div className='dialogs'>\r\n                <span className=\"dialogHead\">Dialogs</span>\r\n                {dialogs}\r\n            </div>\r\n            <div className=\"messages\">\r\n                 <span className=\"dialogName\">{param.name}</span>\r\n                 {messages}\r\n                 <div className=\"sendMessage\">\r\n                    <ReduxSendMessageForm onSubmit={onSendMessage} />\r\n                 </div>\r\n           </div>\r\n           </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const ADD_MESSAGE = 'chats/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n   dialogsData : [{name: \"Stas\",id: 1}, {name: \"Kostya\",id: 2},{name: \"Vasya\",id: 3},{name: \"Ivan\",id: 4}],\r\n   messagesData : [{id:1 , name: \"Stas\", text: \"hi\"}, {id:2 , name: \"Vova\", text: \"hello\"},{id:3, name: \"Stas\", text: \"What`s up?\"},{id:4, name: \"Vova\", text: \"All is Fine\"}],\r\n   chatName : \"Stas\"\r\n}\r\n\r\nconst chatsReducer = (state = initialState,action) => {\r\n    switch(action.type){\r\n        case ADD_MESSAGE:{\r\n            let newId=state.messagesData[state.messagesData.length-1].id+1;\r\n            let newMessage = {id:newId , name: \"Vova\", text: action.messageText};\r\n            let stateCopy = {...state};\r\n            stateCopy.messagesData = [...state.messagesData];\r\n            stateCopy.messagesData.push(newMessage);\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const addMessage = (text) => ({type:ADD_MESSAGE,messageText:text});\r\n\r\nexport default chatsReducer","import {Redirect} from 'react-router-dom'\r\nimport React from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({isAuth: state.auth.isAuth})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n            render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n            }\r\n        }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import Dialogs from \"./Dialogs.js\";\r\nimport React from 'react';\r\nimport {addMessage} from \"./../../redux/chatsReducer.js\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"./../../hoc/withAuthRedirect.js\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogsDataFromState,getNameFromState,getMessagesDataFromState} from \"./../../redux/usersSelectors.js\";\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        dialogsData : getDialogsDataFromState(state),\r\n        name: getNameFromState(state),\r\n        messagesData: getMessagesDataFromState(state)\r\n    }\r\n)\r\n\r\nexport default compose(connect (mapStateToProps,{addMessage}),\r\n                       withAuthRedirect\r\n                      )(Dialogs)\r\n","import \"./Comment.css\"\r\nimport React from 'react'\r\n\r\n\r\n\r\nconst Comment = (param) => {\r\n\r\n    let postElement = React.createRef();\r\n\r\n    let onAddLike = () => {\r\n        let id = postElement.current.id;\r\n        param.addLike(id)\r\n    }\r\n\r\n    return (\r\n                    <div className=\"comment\" id={param.id} ref={postElement}>\r\n                        <img className=\"avatar\" src={param.avatar} />\r\n                        <span className=\"username\">{param.name}</span>\r\n                        <div className=\"c-text\">{param.text}</div>\r\n                        <div className=\"likes\" onClick={onAddLike}>likes {param.likes}</div>\r\n                    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Comment;\r\n//        let count = newLikeElement.current.value;","import \"./ProfileStatus.css\";\r\nimport {getStatus} from \"./../../api/api.js\"\r\nimport React,{useState, useEffect} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = React.memo(param =>{\r\n\r\n        let [editMode,setEditMode] = useState(false);\r\n        let [status,setStatus] = useState(param.status);\r\n\r\n        useEffect(() => {\r\n            setStatus(param.status)\r\n        }, [param.status])\r\n\r\n         const activateEditMode = () => {\r\n            setEditMode(true);\r\n         }\r\n\r\n         const deactivateEditMode = () => {\r\n            setEditMode(false);\r\n            param.updateStatusFull(status);\r\n         }\r\n\r\n         const onStatusChange = (e) => {\r\n             setStatus(e.currentTarget.value)\r\n         }\r\n\r\n        return (\r\n           <div className=\"status\">\r\n                {!editMode ?\r\n                <div><span onDoubleClick={activateEditMode}>status: {status ? status : \"no status\"}</span></div>\r\n                :\r\n                <div>status: <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} /></div>\r\n                }\r\n           </div>\r\n        )\r\n});\r\n\r\nexport default ProfileStatusWithHooks;","import \"./ProfileTop.css\";\r\nimport React from \"react\";\r\n//import ProfileStatus from \"./ProfileStatus.js\";\r\nimport ProfileStatus from \"./ProfileStatusWithHooks.js\";\r\nimport userPhoto from \"./../../assets/images/avatar.png\";\r\n\r\n\r\nconst ProfileTop = (param) => {\r\n    if(!param.profileData){\r\n    return (\r\n            <div className=\"profileTop\">\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n    return (\r\n                    <div className=\"profileTop\" id={param.profileData.userId}>\r\n                        <img className=\"avatar\" src={param.profileData.photos.large != null ? param.profileData.photos.large : userPhoto} />\r\n                        <div className=\"username\">Full name: {param.profileData.fullName}</div>\r\n                        <div className=\"aboutMe\">about me: {param.profileData.aboutMe}</div>\r\n                        <ProfileStatus {...param} />\r\n                    </div>\r\n\r\n    )\r\n    }\r\n}\r\n\r\nexport default ProfileTop;","import \"./Profile.css\";\r\nimport Comment from \"./Comment.js\";\r\nimport ProfileTop from \"./ProfileTop.js\";\r\nimport React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {reduxForm,Field} from \"redux-form\";\r\n\r\nconst AddPostForm = (param) => {\r\n    return (\r\n            <form onSubmit={param.handleSubmit}>\r\n            <div><Field placeholder={\"Enter your message\"} name={\"postText\"} component={\"textarea\"} /></div>\r\n            <div><button>Send</button></div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst ReduxAddPostForm = reduxForm({form: 'addPost'})(AddPostForm)\r\n\r\nconst Profile = (param) => {\r\n\r\n    let comments = param.profile.commentsData.map(el =>(<Comment avatar={el.avatar} text={el.text} name={el.name} likes={el.likes} id={el.id} addLike={param.addLike} key = {el.id}/>))\r\n\r\n    let onAddPost = (values) => {\r\n        param.addPost(values.postText)\r\n    }\r\n    return (\r\n            <div className='profile'>\r\n                    <ProfileTop {...param}/>\r\n                <div className=\"comments\">\r\n                    {comments}\r\n                </div>\r\n                <div className=\"post\">\r\n                     <ReduxAddPostForm onSubmit={onAddPost}/>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import userPhoto from \"./../assets/images/avatar.png\";\r\nimport {getProfileInfo,getStatus,updateStatus} from \"./../api/api.js\";\r\n\r\nconst ADD_LIKE = 'profile/ADD-LIKE';\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst TOGGLE_LOADING = 'profile/TOGGLE-LOADING';\r\nconst SET_PROFILE = 'profile/SET-PROFILE';\r\nconst SET_STATUS = 'profile/SET-STATUS';\r\n\r\nlet initialState = {\r\n    profileData : null,\r\n    commentsData : [{id:1,avatar:userPhoto, text:\"Hello\", name:\"Vasya\", likes:23},\r\n            {id:2,avatar: userPhoto, text:\"Nice job!!!\", name:\"Petya\", likes:3}],\r\n    isLoading: false,\r\n    status : \"\"\r\n}\r\n\r\nconst commentsReducer = (state = initialState,action) => {\r\n    switch(action.type){\r\n        case ADD_POST : {\r\n            let newId=state.commentsData[state.commentsData.length-1].id+1\r\n            let newPost = {\r\n            id:newId,\r\n            avatar: userPhoto,\r\n            text: action.postText,\r\n            name:\"Vova\",\r\n            likes:0\r\n            };\r\n            let stateCopy = {...state};\r\n            stateCopy.commentsData =[...state.commentsData];\r\n            stateCopy.commentsData.push(newPost);\r\n            return stateCopy;\r\n        }\r\n        case ADD_LIKE : {\r\n            let stateCopy = {...state}\r\n            stateCopy.commentsData =[...state.commentsData]\r\n            let currentPost=stateCopy.commentsData.find(x => x.id === action.postId);\r\n            currentPost.likes+=1;\r\n            return stateCopy;\r\n        }\r\n        case TOGGLE_LOADING : {\r\n            return {...state,isLoading: action.isLoading};\r\n        }\r\n        case SET_PROFILE : {\r\n            return {...state,profileData: action.profileData};\r\n        }\r\n        case SET_STATUS : {\r\n            return {...state,status: action.status};\r\n        }\r\n//        case UPDATE_STATUS : {\r\n//                    return {...state,status: action.data};\r\n//        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const addPost = (text) => ({type:ADD_POST,postText:text});\r\nexport const addLike = (id) => ({type:ADD_LIKE,postId:parseInt(id)});\r\nexport const toggleLoading = (isLoading) => ({type:TOGGLE_LOADING,isLoading});\r\nexport const setProfile = (profileData) => ({type:SET_PROFILE,profileData});\r\nexport const setStatus = (status) => ({type:SET_STATUS,status});\r\n\r\n\r\nexport const getProfileInfoFull = (id) =>async (dispatch) => {\r\n                dispatch(toggleLoading(true));\r\n                let response = await getProfileInfo(id)\r\n                dispatch(toggleLoading(false));\r\n                dispatch(setProfile(response.data));\r\n}\r\n\r\n\r\nexport const getUserStatusFull = (id) =>async (dispatch) => {\r\n                let response = await getStatus(id)\r\n                dispatch(setStatus(response.data));\r\n}\r\n\r\n\r\nexport const updateStatusFull = (text) => async (dispatch) => {\r\n                    let response = await updateStatus(text)\r\n                    if(response.data.resultCode === 0){\r\n                        dispatch(setStatus(text));\r\n                    }\r\n}\r\n\r\n\r\nexport default commentsReducer\r\n","import Profile from \"./Profile.js\";\r\nimport {connect} from \"react-redux\";\r\nimport {setProfile,addPost,addLike,toggleLoading,getProfileInfoFull,getUserStatusFull,updateStatusFull} from \"./../../redux/profileReducer.js\";\r\nimport Loading from \"./../common/Loading/Loading.js\";\r\nimport * as axios from \"axios\";\r\nimport React,{PureComponent} from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"./../../hoc/withAuthRedirect.js\";\r\nimport {compose} from \"redux\";\r\nimport {getProfileFromState,getIsLoadingFromStateProfile,getProfileDataFromStateProfile,getStatusFromState,getAuthorizedUserIdFromState} from \"./../../redux/usersSelectors.js\";\r\n\r\nclass ProfileAPI extends PureComponent{\r\n\r\n    componentDidMount(){\r\n        console.log(this.props)\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getProfileInfoFull(userId);\r\n        this.props.getUserStatusFull(userId);\r\n    }\r\n\r\n//    shouldComponentUpdate(nextProps,nextState){\r\n//        return (nextProps!==this.props) || (nextState!==this.state);\r\n//    }\r\n\r\n    render(){\r\n        console.log(\"profileRender\");\r\n        return (\r\n            <div>\r\n            <Loading isLoading = {this.props.isLoading} />\r\n            <Profile {...this.props} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        profile: getProfileFromState(state),\r\n        isLoading : getIsLoadingFromStateProfile(state),\r\n        profileData : getProfileDataFromStateProfile(state),\r\n        status : getStatusFromState(state),\r\n        authorizedUserId : getAuthorizedUserIdFromState(state)\r\n    }\r\n)\r\n\r\nexport default compose(connect (mapStateToProps,{addPost,addLike,toggleLoading,setProfile,getProfileInfoFull,getUserStatusFull,updateStatusFull}),\r\n                       withRouter,\r\n                       withAuthRedirect\r\n                       )(ProfileAPI)","import \"./FormsControls.css\"\r\nimport React from 'react';\r\n\r\nexport const Textarea = ({input,meta,...param}) => {\r\n    const hasError = meta.error && meta.touched;\r\n        return (\r\n        <div className={hasError ? \"formControl error\" : \"formControl\"}>\r\n        <div>\r\n        <textarea {...input} {...param}/>\r\n        </div>\r\n        {hasError ? <span>{meta.error}</span>:<span></span>}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport const Input = ({input,meta,...param}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n    <div className={hasError ? \"formControl error\" : \"formControl\"}>\r\n    <div>\r\n    <input {...input} {...param}/>\r\n    </div>\r\n    {hasError ? <span>{meta.error}</span>:<span></span>}\r\n    </div>\r\n    )\r\n}","import \"./LogIn.css\";\r\nimport {reduxForm,Field} from \"redux-form\";\r\nimport {required,minLengthCreator} from \"./../../validators/validators.js\";\r\nimport {Input} from \"./../common/FormsControls/FormsControls.js\";\r\nimport {logInFull} from \"./../../redux/authReducer.js\"\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nlet minLength4 = minLengthCreator(4);\r\n\r\nconst LogInForm = ({handleSubmit,error}) => {\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n            <div><Field placeholder={\"email\"} name={\"email\"} component={Input} validate={[required]} /></div>\r\n            <div><Field type={\"password\"} name={\"password\"} placeholder={\"Password\"} component={Input} validate={[required,minLength4]} /></div>\r\n            <div>remember me<Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"}/></div>\r\n            {error ? <div className=\"generalError\">{error}</div> : \"\"}\r\n            <div><button>Log in</button></div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst ReduxLogInForm = reduxForm({form: 'login'})(LogInForm)\r\n\r\nconst LogIn = (param) => {\r\n\r\nconst onSubmit = (formData) => {\r\n    param.logInFull(formData.email,formData.password,formData.rememberMe)\r\n}\r\n\r\n    if(param.isAuth){\r\n    return <Redirect to=\"/profile\"/>\r\n    }\r\n    return (\r\n        <div className=\"loginMain\">\r\n            <h3>Log In</h3>\r\n            <ReduxLogInForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToParam = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToParam,{logInFull}) (LogIn);\r\n","import \"./User.css\"\r\nimport React from 'react'\r\nimport userPhoto from \"./../../assets/images/avatar.png\"\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst User = (param) => {\r\n\r\n    let userElement = React.createRef();\r\n\r\n    let onDelUser = () => {\r\n        param.delUserFull(userElement.current.id);\r\n    }\r\n\r\n    let onAddUser = () => {\r\n        param.addUserFull(userElement.current.id)\r\n    }\r\n    return (\r\n                    <div className=\"user\" id={param.id} ref={userElement}>\r\n                        <NavLink to={\"/profile/\" + param.id}>\r\n                        <img className=\"avatar\" alt=\"avatar\" src={param.avatar != null ? param.avatar : userPhoto} />\r\n                        </NavLink>\r\n                        <span className=\"username\">{param.name}</span>\r\n                        <div className=\"status\">{param.status}</div>\r\n                        <div className=\"city\">City</div>\r\n                        <div className=\"country\">Country</div>\r\n                        {param.friend ? <button disabled={param.isAdding} className=\"delAddUser\" onClick={onDelUser}>Delete</button> : <button disabled={param.isAdding} className=\"delAddUser\" onClick={onAddUser}>Add</button>}\r\n                    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default User;\r\n","import \"./Users.css\";\r\nimport User from \"./User.js\";\r\nimport React from 'react';\r\n\r\n\r\nconst Users = (param) => {\r\n let pagesCount = Math.ceil(param.totalCount / param.pageSize);\r\n let partSize = 20;\r\n         let pages =[]\r\n         for(let i = 1; i <= pagesCount; i++){\r\n             pages.push(i)\r\n         }\r\n\r\n let onRight = () => {\r\n    param.changePages(20);\r\n    if(param.rightLimit>param.totalCount){ param.changePage(param.rightLimit-param.totalCount)};\r\n }\r\n\r\n let onLeft = () => {\r\n    param.changePages(-20);\r\n }\r\n\r\n return <div className='users'>\r\n        {param.users.map(el =>(<User avatar={el.photos.small} status={el.status} name={el.name}\r\n        friend={el.followed} id={el.id} {...param} key = {el.id}/>))}\r\n        <div className=\"pages\">\r\n        {(param.leftLimit === 1) ? \"\" : <button onClick={onLeft}>left</button>}\r\n        {pages.filter( p => (p>=param.leftLimit && p<=param.rightLimit)).map(p => {\r\n            return <span className={param.currentPage === p && \"selected\"} onClick={(e) => { param.onPageChanged(p); } }>{p}</span>\r\n        }\r\n        )}\r\n        {(param.rightLimit === param.totalCount) ? \"\" : <button onClick={onRight}>right</button>}\r\n        </div>\r\n        </div>\r\n\r\n}\r\n\r\nexport default Users;\r\n","import {getUsers,delUser,addUser} from \"./../api/api.js\"\r\n\r\nconst ADD_USER = 'users/ADD-USER';\r\nconst DEL_USER = 'users/DEL-USER';\r\nconst SET_USERS = 'users/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET-CURRENT-PAGE';\r\nconst SET_TOTAL_COUNT = 'users/SET-TOTAL-COUNT';\r\nconst TOGGLE_LOADING = 'users/TOGGLE-LOADING';\r\nconst TOGGLE_ADDING = 'users/TOGGLE-ADDING';\r\nconst CHANGE_PAGES = 'users/CHANGE-PAGES';\r\n\r\nlet initialState = {\r\n    users : [],\r\n    pageSize : 10,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isLoading : false,\r\n    isAdding : false,\r\n    leftLimit : 1,\r\n    rightLimit : 20\r\n}\r\n\r\nconst usersReducer = (state = initialState,action) => {\r\n\r\n    switch(action.type){\r\n        case ADD_USER :\r\n        return {\r\n            ...state,\r\n            users: state.users.map(u =>{\r\n            if(u.id === parseInt(action.userId)){\r\n                return {...u,followed:true};\r\n            }\r\n            return u;\r\n            })\r\n        }\r\n        case DEL_USER :\r\n        return {\r\n            ...state,\r\n            users: state.users.map(u =>{\r\n            if(u.id === parseInt(action.userId)){\r\n                return {...u,followed:false};\r\n            }\r\n            return u;\r\n            })\r\n        }\r\n        case SET_USERS : {\r\n              return {...state,users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE : {\r\n              return {...state,currentPage: action.page};\r\n        }\r\n        case SET_TOTAL_COUNT : {\r\n              return {...state,totalCount: action.totalCount};\r\n        }\r\n        case TOGGLE_LOADING : {\r\n              return {...state,isLoading: action.isLoading};\r\n        }\r\n        case TOGGLE_ADDING : {\r\n              return {...state,isAdding: action.isAdding};\r\n        }\r\n        case CHANGE_PAGES : {\r\n              return {...state,leftLimit: (state.leftLimit+action.count),rightLimit: (state.rightLimit+action.count)};\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const addUserB = (userId) =>({type:ADD_USER,userId});\r\nexport const delUserB = (userId) => ({type:DEL_USER,userId});\r\nexport const setUsers = (users) => ({type:SET_USERS,users});\r\nexport const setCurrentPage = (page) => ({type:SET_CURRENT_PAGE,page});\r\nexport const setTotalCount = (totalCount) => ({type:SET_TOTAL_COUNT,totalCount});\r\nexport const toggleLoading = (isLoading) => ({type:TOGGLE_LOADING,isLoading});\r\nexport const toggleAdding = (isAdding) => ({type:TOGGLE_ADDING,isAdding});\r\nexport const changePages = (count) => ({type:CHANGE_PAGES,count});\r\n\r\nexport const getUsersFull = (currentPage,pageSize) => async (dispatch) => {\r\n                dispatch(setCurrentPage(currentPage));\r\n                dispatch(toggleLoading(true));\r\n                let response = await getUsers(currentPage,pageSize)\r\n                    dispatch(toggleLoading(false));\r\n                    dispatch(setUsers(response.data.items));\r\n                    dispatch(setTotalCount(response.data.totalCount));\r\n}\r\n\r\n\r\nexport const addUserFull = (id) => async (dispatch) => {\r\n                console.log(\"hi\");\r\n                dispatch(toggleAdding(true));\r\n                let response = await addUser(id)\r\n                if(response.data.resultCode === 0){\r\n                    dispatch(addUserB(id));\r\n                }\r\n                dispatch(toggleAdding(false));\r\n\r\n}\r\n\r\n\r\nexport const delUserFull = (id) =>async (dispatch) => {\r\n                dispatch(toggleAdding(true));\r\n                let response = await delUser(id)\r\n                if(response.data.resultCode === 0){\r\n                   dispatch(delUserB(id));\r\n                }\r\n                dispatch(toggleAdding(false));\r\n}\r\n\r\n\r\n\r\nexport default usersReducer\r\n","import {connect} from \"react-redux\";\r\nimport Users from \"./Users.js\";\r\nimport React,{PureComponent} from 'react'\r\nimport Loading from \"./../common/Loading/Loading.js\"\r\nimport {getUsersFull,addUserFull,delUserFull,changePages} from \"./../../redux/usersReducer.js\"\r\nimport {getUsersFromState,getPageSizeFromState,getTotalCountFromState,\r\ngetCurrentPageState,getIsLoadingFromStateUsers,getIsAddingFromState,getUsersWithPhoto,getLeftLimit,getRightLimit} from \"./../../redux/usersSelectors.js\";\r\nimport {withAuthRedirect} from \"./../../hoc/withAuthRedirect.js\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass UsersAPI extends PureComponent{\r\n\r\n    componentDidMount(){\r\n            this.props.getUsersFull(this.props.currentPage,this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (page) => {\r\n            this.props.getUsersFull(page,this.props.pageSize);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div>\r\n        Users\r\n        <Loading isLoading = {this.props.isLoading} />\r\n        <Users {...this.props} onPageChanged = {this.onPageChanged} />\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        users : getUsersFromState(state),\r\n//        users : getUsersWithPhoto(state),\r\n        pageSize: getPageSizeFromState(state),\r\n        totalCount : getTotalCountFromState(state),\r\n        currentPage: getCurrentPageState(state),\r\n        isLoading : getIsLoadingFromStateUsers(state),\r\n        isAdding : getIsAddingFromState(state),\r\n        leftLimit : getLeftLimit(state),\r\n        rightLimit : getRightLimit(state)\r\n    }\r\n)\r\n\r\nexport default compose(connect (mapStateToProps,{getUsersFull,addUserFull,delUserFull,changePages}),\r\n                                      withAuthRedirect\r\n                                      )(UsersAPI)","import {getAuthFull} from \"./authReducer.js\";\r\n\r\nconst SET_INITIALIZED = 'app/SET-INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized : false,\r\n}\r\n\r\nconst appReducer = (state = initialState,action) => {\r\n    switch(action.type){\r\n        case SET_INITIALIZED : {\r\n            return {...state,initialized:true}\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setInitializedSuccess = () => ({type:SET_INITIALIZED});\r\n\r\nexport const initializeApp = () =>{\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthFull());\r\n        promise.then(() => {\r\n        dispatch(setInitializedSuccess());\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default appReducer","import logo from './logo.svg';\nimport {connect} from \"react-redux\";\nimport './App.css';\nimport React from 'react';\nimport HeaderContainer from './components/Header/HeaderContainer.js';\nimport Nav from './components/Nav/Nav.js';\nimport Loading from './components/common/Loading/Loading.js';\nimport DialogsContainer from './components/Chats/DialogsContainer.js';\nimport ProfileContainer from './components/Profile/ProfileContainer.js';\nimport LogIn from './components/Login/LogIn.js';\nimport UsersContainer from './components/Users/UsersContainer.js';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport {initializeApp} from \"./redux/appReducer.js\";\n\nconst ProfileSettings = React.lazy(() => import('./components/ProfileSettings/ProfileSettings.js'));\n\nclass App extends React.Component {\n\n    componentDidMount(){\n        this.props.initializeApp();\n    }\n\n    render(){\n    if(!this.props.initialized){return <Loading isLoading={true} />}\n    return (\n        <BrowserRouter>\n        <div className='app-main'>\n            <HeaderContainer />\n            <Nav />\n            <div className=\"content\">\n            <Route path=\"/chats\" render={ () => <DialogsContainer  />} />\n            <Route path=\"/profile/:userId?\" render={ () => <ProfileContainer />} />\n            <Route path=\"/profileSettings\" render={ () =>{return <React.Suspense fallback={<Loading isLoading={true} />}><ProfileSettings /></React.Suspense>}} />\n            <Route path=\"/logIn\" render={ () => <LogIn />} />\n            <Route path=\"/users\" render={ () => <UsersContainer />} />\n            </div>\n        </div>\n        </BrowserRouter>\n    )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized : state.app.initialized,\n})\n\nexport default connect(mapStateToProps,{initializeApp})(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore,combineReducers,applyMiddleware,compose} from \"redux\";\r\nimport commentsReducer from \"./profileReducer.js\";\r\nimport chatsReducer from \"./chatsReducer.js\";\r\nimport usersReducer from \"./usersReducer.js\";\r\nimport authReducer from \"./authReducer.js\";\r\nimport appReducer from \"./appReducer.js\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from \"redux-form\";\r\n\r\nlet reducers = combineReducers({\r\n    profile: commentsReducer,\r\n    chats: chatsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/reduxStore.js\"\nimport {Provider} from \"react-redux\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n//    <Provider dispatch = {store.dispatch.bind(store)}>\n//    </Provider>","module.exports = __webpack_public_path__ + \"static/media/avatar.ebbbc6a3.png\";"],"sourceRoot":""}